{"ast":null,"code":"var _jsxFileName = \"/home/huyhuanhg/learn/FE18/ReacJs/Exercise/to-do-app_redux-toolkit/src/pages/admin/ToDoList/components/TaskForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { Form, Input, Button } from \"antd\";\nimport \"../../../../assets/css/taskForm.css\";\nimport { useDispatch } from \"react-redux\";\nimport { addTaskAction, editTaskAction } from \"../../../../redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TaskForm({\n  type,\n  task,\n  index,\n  setIsShowEditForm\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const [addNewTaskForm] = Form.useForm();\n\n  const handleInitialValues = () => {\n    if (type === 'edit') {\n      return {\n        taskName: task.taskName,\n        description: task.description\n      };\n    }\n  };\n\n  const handleSubmit = value => {\n    if (type === 'add') {\n      addNewTaskForm.resetFields();\n      dispatch(addTaskAction(value));\n    } else {\n      dispatch(editTaskAction(value, index));\n      setIsShowEditForm(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: addNewTaskForm,\n    labelCol: {\n      span: 4\n    },\n    wrapperCol: {\n      span: 16\n    },\n    onFinish: handleSubmit,\n    initialValues: handleInitialValues(),\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"T\\xEAn c\\xF4ng vi\\u1EC7c:\",\n      name: \"taskName\",\n      rules: [{\n        required: true,\n        message: 'Nhập tên công việc!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Nh\\u1EADp t\\xEAn c\\xF4ng vi\\u1EC7c\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"M\\xF4 t\\u1EA3:\",\n      name: \"description\",\n      rules: [{\n        required: true,\n        message: 'Nhập mô tả công việc!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Nh\\u1EADp m\\xF4 t\\u1EA3 c\\xF4ng vi\\u1EC7c\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn-submit\",\n      type: \"primary\",\n      htmlType: \"submit\",\n      style: {\n        backgroundColor: type === 'edit' && \"#238e41\",\n        borderColor: type === 'edit' && \"#238e41\"\n      },\n      children: type === \"add\" ? \"Thêm\" : \"Sửa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TaskForm, \"tInnmPYj6ngg4RqU+Ul7dSDj1Pg=\", false, function () {\n  return [useDispatch, Form.useForm];\n});\n\n_c = TaskForm;\nexport default TaskForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"sources":["/home/huyhuanhg/learn/FE18/ReacJs/Exercise/to-do-app_redux-toolkit/src/pages/admin/ToDoList/components/TaskForm.jsx"],"names":["Form","Input","Button","useDispatch","addTaskAction","editTaskAction","TaskForm","type","task","index","setIsShowEditForm","dispatch","addNewTaskForm","useForm","handleInitialValues","taskName","description","handleSubmit","value","resetFields","span","required","message","backgroundColor","borderColor"],"mappings":";;;AAAA,SAAQA,IAAR,EAAcC,KAAd,EAAqBC,MAArB,QAAkC,MAAlC;AAEA,OAAO,qCAAP;AAEA,SAAQC,WAAR,QAA0B,aAA1B;AAEA,SAAQC,aAAR,EAAuBC,cAAvB,QAA4C,2BAA5C;;;AAGA,SAASC,QAAT,CAAkB;AACIC,EAAAA,IADJ;AAEIC,EAAAA,IAFJ;AAGIC,EAAAA,KAHJ;AAIIC,EAAAA;AAJJ,CAAlB,EAKqB;AAAA;;AAEjB,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AAEA,QAAM,CAACS,cAAD,IAAmBZ,IAAI,CAACa,OAAL,EAAzB;;AAEA,QAAMC,mBAAmB,GAAG,MAAM;AAC9B,QAAIP,IAAI,KAAK,MAAb,EAAqB;AACjB,aAAO;AACHQ,QAAAA,QAAQ,EAAEP,IAAI,CAACO,QADZ;AAEHC,QAAAA,WAAW,EAAER,IAAI,CAACQ;AAFf,OAAP;AAIH;AACJ,GAPD;;AASA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAIX,IAAI,KAAK,KAAb,EAAoB;AAChBK,MAAAA,cAAc,CAACO,WAAf;AACAR,MAAAA,QAAQ,CAACP,aAAa,CAACc,KAAD,CAAd,CAAR;AACH,KAHD,MAGO;AACHP,MAAAA,QAAQ,CAACN,cAAc,CAACa,KAAD,EAAQT,KAAR,CAAf,CAAR;AACAC,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH;AACJ,GARD;;AASA,sBACI,QAAC,IAAD;AACI,IAAA,IAAI,EAAEE,cADV;AAEI,IAAA,QAAQ,EAAE;AAACQ,MAAAA,IAAI,EAAE;AAAP,KAFd;AAGI,IAAA,UAAU,EAAE;AAACA,MAAAA,IAAI,EAAE;AAAP,KAHhB;AAII,IAAA,QAAQ,EAAEH,YAJd;AAKI,IAAA,aAAa,EAAEH,mBAAmB,EALtC;AAAA,4BAOI,QAAC,IAAD,CAAM,IAAN;AACI,MAAA,KAAK,EAAC,2BADV;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,KAAK,EAAE,CAAC;AAACO,QAAAA,QAAQ,EAAE,IAAX;AAAiBC,QAAAA,OAAO,EAAE;AAA1B,OAAD,CAHX;AAAA,6BAKI,QAAC,KAAD;AAAO,QAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,YAPJ,eAeI,QAAC,IAAD,CAAM,IAAN;AACI,MAAA,KAAK,EAAC,gBADV;AAEI,MAAA,IAAI,EAAC,aAFT;AAGI,MAAA,KAAK,EAAE,CAAC;AAACD,QAAAA,QAAQ,EAAE,IAAX;AAAiBC,QAAAA,OAAO,EAAE;AAA1B,OAAD,CAHX;AAAA,6BAKI,QAAC,KAAD;AAAO,QAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,YAfJ,eAuBI,QAAC,MAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,IAAI,EAAC,SAFT;AAGI,MAAA,QAAQ,EAAC,QAHb;AAII,MAAA,KAAK,EAAE;AACHC,QAAAA,eAAe,EAAEhB,IAAI,KAAK,MAAT,IAAmB,SADjC;AAEHiB,QAAAA,WAAW,EAAEjB,IAAI,KAAK,MAAT,IAAmB;AAF7B,OAJX;AAAA,gBASKA,IAAI,KAAK,KAAT,GAAiB,MAAjB,GAA0B;AAT/B;AAAA;AAAA;AAAA;AAAA,YAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqCH;;GAlEQD,Q;UAOYH,W,EAEQH,IAAI,CAACa,O;;;KATzBP,Q;AAoET,eAAeA,QAAf","sourcesContent":["import {Form, Input, Button} from \"antd\";\n\nimport \"../../../../assets/css/taskForm.css\"\n\nimport {useDispatch} from \"react-redux\";\n\nimport {addTaskAction, editTaskAction} from \"../../../../redux/actions\";\n\n\nfunction TaskForm({\n                      type,\n                      task,\n                      index,\n                      setIsShowEditForm\n                  }) {\n\n    const dispatch = useDispatch();\n\n    const [addNewTaskForm] = Form.useForm();\n\n    const handleInitialValues = () => {\n        if (type === 'edit') {\n            return {\n                taskName: task.taskName,\n                description: task.description\n            }\n        }\n    }\n\n    const handleSubmit = (value) => {\n        if (type === 'add') {\n            addNewTaskForm.resetFields();\n            dispatch(addTaskAction(value));\n        } else {\n            dispatch(editTaskAction(value, index));\n            setIsShowEditForm(false)\n        }\n    }\n    return (\n        <Form\n            form={addNewTaskForm}\n            labelCol={{span: 4}}\n            wrapperCol={{span: 16}}\n            onFinish={handleSubmit}\n            initialValues={handleInitialValues()}\n        >\n            <Form.Item\n                label=\"Tên công việc:\"\n                name=\"taskName\"\n                rules={[{required: true, message: 'Nhập tên công việc!'}]}\n            >\n                <Input placeholder=\"Nhập tên công việc\"/>\n            </Form.Item>\n\n            <Form.Item\n                label=\"Mô tả:\"\n                name=\"description\"\n                rules={[{required: true, message: 'Nhập mô tả công việc!'}]}\n            >\n                <Input placeholder=\"Nhập mô tả công việc\"/>\n            </Form.Item>\n\n            <Button\n                className=\"btn-submit\"\n                type=\"primary\"\n                htmlType=\"submit\"\n                style={{\n                    backgroundColor: type === 'edit' && \"#238e41\",\n                    borderColor: type === 'edit' && \"#238e41\",\n                }}\n            >\n                {type === \"add\" ? \"Thêm\" : \"Sửa\"}\n            </Button>\n        </Form>\n    )\n}\n\nexport default TaskForm;"]},"metadata":{},"sourceType":"module"}