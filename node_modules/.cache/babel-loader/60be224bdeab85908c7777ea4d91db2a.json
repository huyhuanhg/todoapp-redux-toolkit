{"ast":null,"code":"var _jsxFileName = \"/home/huyhuanhg/learn/FE18/ReacJs/Exercise/to-do-app/src/pages/admin/ToDoList/components/TaskItem.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Card, Space, Popover } from \"antd\";\nimport \"../../../../assets/css/taskItem.css\";\nimport TaskForm from \"./TaskForm\";\nimport { deleteTaskAction } from \"../../../../redux/actions\";\nimport { connect } from \"react-redux\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TaskItem({\n  task,\n  deleteTask,\n  index\n}) {\n  _s();\n\n  const [isShowEditForm, setIsShowEditForm] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      width: \"60%\",\n      margin: '0 auto'\n    },\n    extra: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Space, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn-edit\",\n          type: \"primary\",\n          onClick: () => setIsShowEditForm(!isShowEditForm),\n          children: \"S\\u1EEDa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Popover, {\n          title: `Bạn muốn xóa ${task.taskName}?`,\n          content: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn-delete\",\n            type: \"primary\",\n            style: {\n              width: \"100%\"\n            },\n            onClick: () => deleteTask(index),\n            children: \"X\\xF3a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 37\n          }, this),\n          trigger: \"click\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn-delete\",\n            type: \"primary\",\n            children: \"X\\xF3a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), isShowEditForm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-form-wrap\",\n        children: /*#__PURE__*/_jsxDEV(TaskForm, {\n          style: {\n            width: \"100%\"\n          },\n          type: \"edit\",\n          task: task,\n          index: index,\n          setIsShowEditForm: setIsShowEditForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true),\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontWeight: \"bold\",\n          fontSize: 18\n        },\n        children: \"Task: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), task.taskName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontWeight: \"bold\",\n          fontSize: 18\n        },\n        children: \"Description: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), task.description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TaskItem, \"jIl6EehKQT1xMMk/2lyuL7Pi/ug=\");\n\n_c = TaskItem;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteTask: index => dispatch(deleteTaskAction(index))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(TaskItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"sources":["/home/huyhuanhg/learn/FE18/ReacJs/Exercise/to-do-app/src/pages/admin/ToDoList/components/TaskItem.jsx"],"names":["Button","Card","Space","Popover","TaskForm","deleteTaskAction","connect","useState","TaskItem","task","deleteTask","index","isShowEditForm","setIsShowEditForm","width","margin","taskName","fontWeight","fontSize","description","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import {Button, Card, Space, Popover} from \"antd\";\n\nimport \"../../../../assets/css/taskItem.css\"\n\nimport TaskForm from \"./TaskForm\";\n\nimport {deleteTaskAction} from \"../../../../redux/actions\";\n\nimport {connect} from \"react-redux\";\n\nimport {useState} from \"react\";\n\nfunction TaskItem({task, deleteTask, index}) {\n    const [isShowEditForm, setIsShowEditForm] = useState(false);\n\n    return (\n        <Card\n            style={{width: \"60%\", margin: '0 auto'}}\n            extra={\n                <>\n                    <Space>\n                        <Button\n                            className=\"btn-edit\"\n                            type=\"primary\"\n                            onClick={() => setIsShowEditForm(!isShowEditForm)}>\n                            Sửa\n                        </Button>\n                        <Popover\n                            title={`Bạn muốn xóa ${task.taskName}?`}\n                            content={\n                                (\n                                    <Button\n                                        className=\"btn-delete\"\n                                        type=\"primary\"\n                                        style={{\n                                            width: \"100%\",\n                                        }}\n                                        onClick={() => deleteTask(index)\n                                        }\n                                    >\n                                        Xóa\n                                    </Button>\n                                )\n                            }\n                            trigger=\"click\"\n                        >\n                            <Button\n                                className=\"btn-delete\"\n                                type=\"primary\"\n                            >\n                                Xóa\n                            </Button>\n                        </Popover>\n                    </Space>\n                    {isShowEditForm && (\n                        <div className=\"edit-form-wrap\">\n                            <TaskForm\n                                style={{width: \"100%\"}}\n                                type='edit'\n                                task={task}\n                                index={index}\n                                setIsShowEditForm={setIsShowEditForm}\n                            />\n                        </div>\n                    )}\n                </>\n            }\n        >\n            <p>\n                <span style={{fontWeight: \"bold\", fontSize: 18}}>Task: </span>\n                {task.taskName}\n            </p>\n            <p>\n                <span style={{fontWeight: \"bold\", fontSize: 18}}>Description: </span>\n                {task.description}\n            </p>\n        </Card>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        deleteTask: (index) => dispatch(deleteTaskAction(index)),\n    }\n};\n\nexport default connect(null, mapDispatchToProps)(TaskItem);"]},"metadata":{},"sourceType":"module"}